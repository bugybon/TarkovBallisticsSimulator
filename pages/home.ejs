<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ballistic calculator</title>

    <script type="importmap">
        {
            "imports": {
                "three": "/three/build/three.module.js",
                "three/addons/": "/three/examples/jsm/",
                "graphql":"/graphql/index.mjs",
                "graphql-request": "/graphql-request/build/entrypoints/main.js"
            }
        }
    </script>

    <script src="/socket.io/socket.io.js"></script>

    <script type="module" src="/graphics.js" async defer></script>
    <!-- <script type="module" src="/itemQuery.js" async defer></script> -->
    <link rel="stylesheet" href="/style.css">
</head>

<body style="background-color:white;">

    <div class="armorDropdown">
        <button class="dropbtn">Armor</button>
        <div class="armorDropdown-content">
            <input type="text" class="search-input" placeholder="Search..." onkeyup="filterOptions(this, '.armorDropdown-content', 'button-armor')">
        </div>
        <h1 id="armorName"></h1>
        <img id="armorImage" src="armor.png"> 
    </div>

    <div id="plate-selection"></div>

    <div id="soft-armors"></div>

    <div class="bulletsDropdown">
        <button class="dropbtn">Bullets</button>
        <div class="bullDropdown-content">
            <input type="text" class="search-input" placeholder="Search..." onkeyup="filterOptions(this, '.bullDropdown-content', 'button-bullet')">
        </div>
        <h1 id="bulletName"></h1>
        <img id="bulletImage" src="bullet.png"> 
    </div>
    
    <script>

        const socket = io("http://localhost:3000");
        socket.emit('requestArmorNames');
        socket.emit('requestBulletNames');

        function clearBox(elementID)
        {
            document.getElementById(elementID).innerHTML = "";
        }

        socket.on('recieveArmorNames', (names) => {

            const dropdownContent = document.querySelector('.armorDropdown-content');

            console.log("Received armor names:", names);

            const armorName = document.getElementById('armorName'); 
            const armorImage = document.getElementById('armorImage'); 

            const options = names;//.map((item) => item['name']);
            // console.log(options);

            options.forEach((option, index) => {
                const button = document.createElement('button-armor');

                button.textContent = option;
                button.onclick = () => {
                    console.log("Requesting armor:", option);
                    socket.emit('requestArmorData', option);

                    armorName.textContent = option;
                    armorImage.src = `images/${option}.png`;
                }

                dropdownContent.appendChild(button);
            });
        });

        socket.on('recieveBulletNames', (names) => {

            const dropdownContent = document.querySelector('.bullDropdown-content');

            console.log("Received bullet names:", names);

            const bulletName = document.getElementById('bulletName'); 
            const bulletImage = document.getElementById('bulletImage'); 

            const options = names;//.map((item) => item['name']);
            // console.log(options);

            options.forEach((option, index) => {
                const button = document.createElement('button-bullet');

                button.textContent = option;
                button.onclick = () => {
                    console.log("Requesting bullets:", option);
                    socket.emit('requestBullets', option[1]);

                    bulletName.textContent = option;
                    bulletImage.src = `images/${option}.png`;
                }

                dropdownContent.appendChild(button);
            });
        });

        function createPlateChoiceDropDown(allowedPlates, area) {
            if (!allowedPlates || allowedPlates.length === 0) return;

            const container = document.createElement('div');
            container.classList.add('plate-container');
            container.id = `plate-container-${area}`;
            
            const select = document.createElement('select');
            select.classList.add('plate-dropdown');

            const title = document.createElement('p');
            title.textContent = `Select ${area} Plate`;
            title.classList.add('plate-title');

            const defaultOption = document.createElement('option');
            defaultOption.textContent = `No plate`;
            defaultOption.value = "";
            select.appendChild(defaultOption);

            allowedPlates.forEach(plate => {
                const option = document.createElement('option');
                option.textContent = plate;
                option.value = plate;
                select.appendChild(option);
            });

            const imgContainer = document.createElement('div');
            imgContainer.classList.add('plate-image-container');
            const img = document.createElement('img');
            img.classList.add('plate-image');
            img.src = `images/placeholder.png`; 
            imgContainer.appendChild(img);
            
            const label = document.createElement('p');
            label.textContent = "";
            label.classList.add('plate-label');

            select.addEventListener('change', function () {
                const selectedPlate = this.value;

                if (selectedPlate) {
                    img.src = `images/${selectedPlate}.png`; 
                    label.textContent = selectedPlate;
                    socket.emit('plateSelected', selectedPlate);

                    const existingInfo = container.querySelector('.plate-info');
                    if (existingInfo) existingInfo.remove();

                    socket.once('recievePlateData', (plate)=>{
                        console.log(plate);
                        const infoContainer = document.createElement('div');

                        infoContainer.classList.add('plate-info');
                        
                        const classLabel = document.createElement('p');
                        classLabel.textContent = `Class: ${plate.properties.class}`;
                        
                        const durabilityLabel = document.createElement('p');
                        durabilityLabel.textContent = `Durability:${plate.properties.durability} / ${plate.properties.durability}`;
                        
                        const materialLabel = document.createElement('p');
                        materialLabel.textContent = `Material: ${plate.properties.material.id}`;
                        
                        infoContainer.appendChild(classLabel);
                        infoContainer.appendChild(durabilityLabel);
                        infoContainer.appendChild(materialLabel);
                        
                        container.appendChild(infoContainer);
                    });
                } else {
                    img.src = `images/placeholder.png`;
                    label.textContent = "";
                }
            });

            container.appendChild(title);
            container.appendChild(select);
            container.appendChild(imgContainer);
            container.appendChild(label);
            
            const armorSelectionContainer = document.getElementById('plate-selection');
            armorSelectionContainer.appendChild(container);
        }

        function removeAllPlateContainers() {
            const plateContainers = document.querySelectorAll('.plate-container');
            const softArmorContainers = document.querySelectorAll('.soft-armor-container')

            plateContainers.forEach(container => container.remove());
            softArmorContainers.forEach(container => container.remove());
        }

        function extractPlates(armorData, plateNameId) {
            const slot = armorData.properties.armorSlots.find(slot => slot.nameId === plateNameId);

            const plateNames = [];
            if (slot && slot.allowedPlates) {
                for (let plate of slot.allowedPlates) {
                    plateNames.push(plate.name);
                }
            } 

            return plateNames;
        }

        function extractSoftArmor(data){
            const excludedSlots = ["Front_plate", "Back_plate", "Left_side_plate", "Right_side_plate"];
            const softArmors = [];

            data.properties.armorSlots.forEach(slot => {
                if(!excludedSlots.includes(slot.nameId)){
                    if(!slot.material.name)
                    {
                        softArmors.push({
                            nameID: slot.nameId,
                            class: slot.class,
                            durability: slot.durability,
                            material: "aramid"
                        });
                    } else {
                        softArmors.push({
                        nameID: slot.nameId,
                        class: slot.class,
                        durability: slot.durability,
                        material: slot.material.name
                    });
                    }
                }
            });

            return softArmors;
        }

        function createSoftArmor(armors) {
            const softArmorContainer = document.getElementById('soft-armors');
            softArmorContainer.innerHTML = "";

            armors.forEach(armor => {
                const container = document.createElement('div');
                container.classList.add('soft-armor-container');
                container.id = `soft-armor-${armor.nameID}`;

                const imgContainer = document.createElement('div');
                imgContainer.classList.add('soft-armor-image-container');
                
                const area = JSON.stringify(armor.nameId);
                const img = document.createElement('img');
                img.classList.add('soft-armor-image');
                img.src = `images/${armor.nameID.replace(/\s+/g, '_')}.png`
                img.alt = armor.nameID;
                imgContainer.appendChild(img);

                const infoContainer = document.createElement('div');
                infoContainer.classList.add('soft-armor-info');

                const nameLabel = document.createElement('p');
                nameLabel.textContent = `Area: ${armor.nameID}`;
                nameLabel.classList.add('soft-armor-label');
                
                const classLabel = document.createElement('p');
                classLabel.textContent = `Class: ${armor.class}`;
                
                const durabilityLabel = document.createElement('p');
                durabilityLabel.textContent = `Durability:${armor.durability} / ${armor.durability}`;
                
                const materialLabel = document.createElement('p');
                materialLabel.textContent = `Material: ${armor.material}`;
                
                infoContainer.appendChild(nameLabel);
                infoContainer.appendChild(classLabel);
                infoContainer.appendChild(durabilityLabel);
                infoContainer.appendChild(materialLabel);
                
                container.appendChild(infoContainer);
                container.appendChild(imgContainer);
                
                softArmorContainer.appendChild(container);
            });
        }
        
        socket.on('recieveArmorData', (data) => {
            console.log("Received armor data:", data);

            removeAllPlateContainers();

            const frontPlates = extractPlates(data, "Front_plate");
            const backPlates = extractPlates(data, "Back_plate");
            const leftPlates = extractPlates(data, "Left_side_plate");
            const rightPlates = extractPlates(data, "Right_side_plate");

            createPlateChoiceDropDown(frontPlates, "Front_plate");
            createPlateChoiceDropDown(backPlates, "Back_plate");
            createPlateChoiceDropDown(leftPlates, "Left_side_plate");
            createPlateChoiceDropDown(rightPlates, "Right_side_plate");

            const softArmors = extractSoftArmor(data);
            if (softArmors.length !== 0)
            createSoftArmor(softArmors);
        });

        socket.on('recieveArmorDataError', (error) => {
            console.error("Armor not found:", error);
            alert("Armor not found.");
            
            removeAllPlateContainers();
        });

        function filterOptions(inputElement, dropdownSelector, button) {
            const dropdownContent = document.querySelector(dropdownSelector);

            const filter = inputElement.value.toLowerCase();
            const buttons = dropdownContent.querySelectorAll(button);

            buttons.forEach(button => {
                const text = button.textContent || button.innerText;
                button.style.display = text.toLowerCase().indexOf(filter) > -1 ? '' : 'none';
            });
        }
    </script>
</body>
</html>